<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbPersonalPicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAHr9JREFUeF7t
        3YuVLMWVBVCZMCbIBHkgPBAeIA+EB+CB5AHyADxAHoAH4IHkwUye4dVM0e/2t6oibmTsvdZZSx94rzur
        IiPjxif/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADwYP915M9X+abId0d+fCa/HPnvO+WLIwDADZ526Ned+E9Hqg54dvKzAQAvSOf+
        1ZHrzr1rx/6eqAIAsL0/HrmM4v9+JJ38v49UHedZogoAwFbS0f/tSEbzZxjJ3xJVAABOSWf/clQBAFhe
        Vtn/5cilhF91ePJ5VAEAWMp1h290//GoAgDQXkr6Ovz7RxUAgFYyys8WvO+PnH1V/syoAgAwXbbkZeGe
        Uf7YqAIAMJxOf35UAQAYQqffL6oAADxM5vRt0+sZVQAA7iqj/azet5Cvf1QBALjJZQW/Ev9aUQUA4EOM
        9tePKgAAb/anIzlzv+pQZK2oAgDwqowWLeo7X1QBACiZ3z93VAEA+J2MDH85UnUacq6oAgCg1L9hVAEA
        NpbFfTr+faMKALCZbOezql9UAQA28s0R+/jlElUAgJOzwE+qqAIAnFSO7f3+SHXzF0lUAQBOJq/kVe6X
        16IKAHASWeRndb+8J6oAAIsz6pePRBUAYFHm+uXWqAIALObLI0b9cmtUAQAW4kAfuWdUAQCay0I/b+zr
        kV+P/Osq317lr0fSqV4nRzBf5L9Xf+asqAIANJZOQ8n/8bl07D8cuXTomW7J9c8D2L3k76j+/pnJg0CS
        kyOzsPTPR7LOBIBJckOubtjysVyP2r8+cu/O/S26VQFeSh4882Dw9yNfHbmuZgDwAFb535afj/zzSDr6
        GZ38azpWAd6aPBTku5lKgQcCgDtK52++/+1JZ/qPIynXr9IhrVQFeC2XB4JUCLo9aAEsIx2Y+f7ncxnZ
        Z7Hd6qPPlasALyUPr6kOeBgAeCOd/+dJh38Z3Z9tUdqZqgDPJQ8DqQxYUAjwjIxoqxvobslK/Izwz9jh
        V85aBaiSMyzy0APAJ7t3/hnlZ7HejgvKdqgCPI2qAMBh184/e+3zu+sE9qoCXCfTXdnm6jsAbGe3zj8d
        nU7/cztWAa7jQQDYyi6df+b0c+COFeEv27UKcJ08CGT3AMBp7dD5ZyGfBV9vt3sV4Dq/HMkiUIBTOXPn
        n9G+Ev/HqQL8PjmCWOUIOIWzdv7puIz2b6cK8Hku6wMAlnXGzj9l/h237j2SKkCdbB1UDQCWk06yuqmt
        mnT8bsaPoQrwfCwSBJZypuN9dfxjqAK8nLx4yDoToLXcpLKiubqJrZR0SDr+cVQBXk+mBEw/AS2l889N
        qrp5rZIc0Wtx3xyqAK8nlbWsrQFoJWXK6qa1Qv5zJIf3MI8qwNtjXQDQRjrP6ka1QjLPb361B1WAtydv
        GgSYatWRWw7xUe7vRRXgffEQAEyTkfOKK/6N+vtSBXhf8hDguwwMl6NLq5tS12Su35nrveXzqT47eT5Z
        fOshABjmH0eqm1HXZGTpJrmGTM9Un6E8nzwEADzcanO13x5hHWd+gdQjY00A8FAZRa9y2I+S/7ry2VWf
        qbwcDwHAw6yy3z+H+jjNb12p2lSfq7weFS/g7lZZoJXO33z/2vL5VZ+tvC0qX8Dd5Ia8wpa/bPHjHPJZ
        Vp+xvJ60Ve8OAO5ihdK/zv9cHAx0W2wPBG62Qulf539OtgTelpzVAfAhK6z61/mfl8WAt8eiQOBDut+A
        df7nlp0c1ecu74v1AMC7dL/56vz3kF0d1ec/Mqu/oyBVPOsBgDfrfNa/zn8fHV43nRF0FiWu/CDgkCDg
        TTqvwNb57yWdb/U9GJnrffUrPwg4HwB4VdeFfw752dPs3QDVQro8CKy2S8FUAPCirgv/dP77StWn+k6M
        Skb8lXwfV9upkDd5AnwmN7SOJ/7l5TBWMu9r9jqA5x4ALvLd7LBY8a1J9QLgd7qOZsxd7m32mpQ8FL9F
        RtfVv98tOSUQ4P90Hf0rWRLVd2Nk3uqvR6p/v1vycwL8r46j/9dKr+yj+n6MzHtkSiDTVtWf0yV52Lem
        Bmg5+s8N1A2Ki+o7MjLvlYO0uq8LqHY3AJvpOPq3UImLPAhW35GR+Yj83N0fAvKgAmyq4+jfvD+Rzumb
        I7O/n9nv/1HdHwIcrAUb63DU6nVys1X639efj/z9SFaqV9+PGbl1LUr3hwBVANhUt1P/lP73kY7nL0fS
        4Xd+98Q9KlKdHwJUAWBD3bYsKf2fUzq/jOz/dqR7Z1/lXovlch267g5QBYDNdCqzWvW/tnTwl04+8/bf
        H1mto38u96xKdXi5URVVANjI7NPVnsbBJPOkU7p04Ne5dObXSad+SceDox6Rez+Ydj0sSBUANvHDkeom
        MCMO/Pm45zrsS6n9Ol3f8tg5mbd/hI7HBpuCgw3kSb+6AcyKF/3ULnPnXx1Jp/7dkXTknaZuzp5HdYr5
        bLstCnQ6IGyg08E/5h5/cxnBX0buu5TXu+eRL6LquB7AVBycXKdS8I7zjhllXba/Gc33zS0HAL1Vt1M4
        c28ATqrT4r9dRv86/DUzak6821SAszjgpNLpVo1+dM6+7S+/W+busx2u+v2lf0atTek2FZAFwsDJpFPq
        Mrd8xjeR6fTPk9E7U7rtCjjzwzlsqcv+47ON/rOOIeV9C/fOk9Fl8LSHTqcE5h0hwIl0mX8+y37jdBJG
        ++fLrHMpOi0IzL0COIlOe/9XX/mfOdts1at+N1k/MxfBZedB9TPNiPM54CS6vPZ35ZX/KdPmMJ7q95Jz
        ZPYCuE7HBDsZEE6iy9G/q24xyuI+c/znTpe1KV2qAM4EgBPITa1q4KOz4pn/ma5Q7t8jXU7B61QFMA0A
        i+tyQ+lyg32rHANr1L9Huk1NdakCmAaAxXUo/6e8upJs66t+DzlfchJft22pXXYEmAaAhXUp/6+y+C/X
        S8l/n3Q9k6JLu01MA8CiUsauGvXorHATyc/orP59ks6/8/eyy7HdZzy1E7bQ4SYy4q1qt0pHYL5/n3Tv
        /CM/X/Wzj45DgWBRHV792/1YUZ3/Xsmcf/fO/6LLmwI7TpMAL+hy+l/nk/90/nslFbGVOrMuB3hlKhFY
        SIebR0YwXen898qKL7jpshhwlUW8wCcdtv91venmxtphekQen5VK/pUO7dh2QFhMh9Ftx/J/On+r/c+f
        LPQ7wwr2Lgd5rf4SL9hGRjxVIx6ZruV/r/A9f1ab639Jl2mA1U7yhG11mP/veIxol0VV8pik4z/jSLXD
        NIB1ALCIDjeMbvOuHaoicv+k1J+HzTOXqDtMA1gHAIuYvcAtN+VOLPo7X/KQu0tZuss0wFmmVeC0MhKq
        Gu/I5ObcSUaI1c8p6yQPlZdOf8eOqMOhQM4DgOY6nP/fafvfF0eqn1F6J0dIp8PPd2nlbXz30uENgd4L
        AM11GO12mo9V+u+bdPL/OpKOPp1LRvd5YONzHR5k81kBjaWRVo13VDq9/Meq/8ck5fh8z6rkATSd+XVS
        lUoHdgkfk+tefR4jAzRWNdqR6bJdKPPEjvr9PJdR9yVPO+vrjjpRfu8jlZLqMx0ZBwJBUx22unVZmZ3O
        rPr5zpjrEfmlI7+U0xM37XPo8J22EBCayk2/arQj02HEeMbR/2Xkfungjc73k8+8+m6MTL57QEMdRggd
        dLgOtySdfaZSsoYhN337r7movi8jk4dQoKE0zqrRjkqHm8OKo/90+Fk8l/Kqzp6XzG7jTgSEpmZveetQ
        HuwwDfKWXDp9ZXzeo8M2X6ChqrGOTIcFQp33/WexXkr7On0+qsMDbqalgEY6LBCavdq8wy6IKhnt58at
        vM+tOnzH810GGulw6M1sHcqj17l0/HBP1XdtZOwEgGZmr3zvsACw0+K/fB5G/DzC7IWA3V72BdubfVOY
        fQJghymQJPP85kh5pLS16rs3Kh0e9oErsx8AZpcFO5T/0/lb4Mejza72JUAjVSMdmdmj3p+OVD/XyDgm
        lRE6VLtMb0ETaYxVIx2ZmTsA8ndXP9PIdHkJEufX4ftumgua6DAimKnD3mgv3GGk6js4Mh4AoImUnqtG
        Oio/H5lp9vy/VdGMljZXfRdHxVZAaGL3LYCzF0Ca+2e03Rf9Ap/MHgHn75+p+plGxoIoRpv90K/qBU3s
        PBqYfTTq7OkP9rR71Q/4ZOcS+OwFkFb/M8PsdT9eCwxNzH4D3swVwbNHQuZCmWH3nT/AJ1XjHJmZc+Cz
        HwAsAGSGDmcBAA1UjXNkZpo9/WE/NLNU38eRcfYFTNbh/eAzeQBgV9X3cWR892Gy2XOBs1fBz34AsAWQ
        WTz8wuZmPwDkJjTTv49UP9eowCyzHwCsf4HJdt8PXP1MIwOzzH4AsAMGJtt9G1z1M40MzDL7BFAPADDZ
        7g8AsCttHzbnJgB70vZhc8qAsKevj1RtclRmr/+B7c1eCGQrEMyx+w4g2J4HANiTBwDYnAcA2JMHANic
        BwDYkwcA2JwHANjT7AeAn44AE/1ypGqcowLMkfdQVG1yZICJqkY5MsA8VZscGWCiqlGODDBP1SZHBpio
        apQjA8xTtcmRASaqGuXIAPNUbXJkgImqRjkywDxVmxwZYKKqUY4MME/VJkcGmKhqlCMDzFO1yZEBJqoa
        5cgA81RtcmSAiapGOTLAPFWbHBlgoqpRjgwwT9UmRwaYqGqUIwPMU7XJkQEmqhrlyADzVG1yZICJqkY5
        MsA8VZscGWCiqlGODDBP1SZHBpioapQjA8xTtcmRASaqGuXIAPNUbXJkgImqRjkywDxVmxwZYKKqUY4M
        ME/VJkcGmKhqlCMDzFO1yZEBJqoa5cgA81RtcmSAiapGOTLAPFWbHBlgkv86UjXKkQHmqdrkyOQeBAyW
        hvfTkapRjgwwT9UmRyb3IA8BMFCXzj8B5qna5Oh4CIBBOnX+CTBP1SZnxEMAPFi3zj8B5qna5Kx4CIAH
        +v5I1fBmBpinapMz890R4M7+caRqcLMDzFO1ydn59ghwJ389UjW0DgHmqdpkh3x5BLjRH4/8+0jVyDoE
        mKdqkx2Se1buXcANui36expgnqpNdsmPR4APylxa1bA6BZinapOd8vUR4J2+OFI1qG4B5qnaZLeYCoB3
        SvmsakzdAsxTtcluMRUA79B51f/TAPNUbbJjUtEEXpGTtH45UjWijgHmqdpkx+SeBrxihYV/l/zrCDBP
        2mDVNjvGgkB4Rec9/5f8eiTTFMB8aYtpk1Vb7RRVAHhB97n//xxxzCf0lLaZNlq13S4xcIBndJ77/+eR
        3d/09ZcjedlJVjVfH9CU/5z/Lf9f/hkew/V/Xdpo2url2nSLHQFQ6LrvP3OMO+/jzQ01Hct7pmbyz+bf
        8WrU27n+H5M223V9gB0B8ES3p/aUEnd/occ3R25Zk5F/N38GH+P63y5tuNu0QN5sCly55UZ37/x8ZOfR
        U373e76DIX+WasDbuf73ld89bbq6NjNiMSBc6VT+TyViZ3868oi1GPkz82fzMtf/MfIQ8MOR6trMiLYA
        n6QkVjWS0THyf0znc0n+7J2v72tc/8fK796lEmAaAD65Z7nzo8k84e6d04jPIX8HNdf/8dLGO6wJ0A7g
        k6qBjM7uC/5GnsDoLIXPuf7jdDlvBLbXYf5/9yN9MyoauQgzf9fu1ZZrrv94HU4OtB2Q7eV87KpxjMzu
        o/8ZWzB3X2x5zfUfr0MVwKmAbG/2AsDMB+5uxhbM/J38xvWfY/ZaAAsB2d7s07p2Hwml+lFdlxHZvfIS
        rv88Myov19l96hGmPwDsXoabeRM0AnL9Z5o9DeABgO3NfgDYfSHOzOvvBuj6zzR7AbLvP9urGsbI7G7E
        3vPnYi+06z9bdV1GBrZWNYqR2V11TUZmd9U1GZndVddkZGBrVaMYmd1V12Rkdlddk5HZXXVNRga2VjWK
        kdn5Xf8x82z0/N27c/3nSduvrsvIwNZm78W1CLC+LiNiEZTrP9PsRYDOIGF7M2+AiW2A9XUZEdsAXf+Z
        bAOEyWY/AOQd4TtzEM1crv88afvVdRkVDwBsL6OQqnGMiiNR50zDKH/+P9d/jhlHMF9HBYztjXwN6nMx
        DVBfl0cmfye/cf3Hm13+T7wWm+3NLIFe8suRneXVsCNHofm7vA74/7n+46XNV9dmZLwOmO3lRlQ1jtHZ
        vTGOrMQY+XzO9R+nw+g/8RAMh1+PVA1kZDIfuHuDHLEn3d7/57n+j5c2PnvuP9EO4JOZW6Gu8+ORneXm
        +MiHsfzZRj3Pc/0fL228ujajYw0MfNJhHcAl3x3Z2Z+OPKITyp+ZP5uXuf6Pk7ZdXZsZsQUWroxcBPVa
        8pa0nUdK+d3vWY7On2Xk/3au/33ld5/51sWnyb0OuNJlGuCSrBLe/Sk9i8VueTDLv2vB38e5/rdLG+6w
        4v86yv/wxOxzuZ9L5gz/cmRXGT3lhvWejij/bP4do/7buf4fkzbbZb7/aWz/g8Ij5j7vlYwi/n7kqyO7
        zqVmNJXTy3KE6XWJOv85/1v+P3Obj+P6Py9tMm0zbbTbiP86uccBha+PVI2mezK/mNHGdb4/8s2neOKH
        90mbubSftKWn7avTnP57svupo/CslCzfU+pcJblZAW+3agf/UnJvMy0GL1i1CvBaNHx4m7SVqg2tHqN/
        eIPOawE+Go0f3qbLUb33jLl/eKMsZKoa0cqx9QfeJm2lakMrx+JYeIcfjlQNadXk/HHgdR3O6r9nci8D
        3uGMCwIdhQsvSxup2s6qsfAPPuhsUwFOxYOXpY1UbWfVKP3DDXK4SdWwVoztgPCyM23/y70LuNH1qWer
        RzkQamfa/pd7FnAHuTGc5SHAdkConWX7X+5VHvThjv545AyLAm0HhNoZtv/lHpV7FXBnWSG8+kOA7YBQ
        W337X+5NdvrAA53hIcDKYPi91Xf86PxhkDS0lY8LNg0Av7dy+T/3Ip0/DLTywkDTAPB7q5b/LfiDiVYd
        ORgxwG/SFqo20j0qedBAXiG82roAh4TAb1Y77Cv3mtxzgCYyilhpSuCXI8BvbaFqIx2Te4zqHTSUubiV
        zhJ3I2F3K5X/c28x3w/NrVINMA3A7lYo/xv1w4JytGjntQGmAdhd5/J/7h2O7oaFXaYFuj4IGFmwq67l
        /9wrlPvhRLo+CJgGYFfdyv86fji5NO5s4elykqBpAHbVpfyfe0HuCTp+2EiX88dNA7CbLuV/7+WAjf1w
        pLoxjIxpAHbTofyftg9sLKt8q5vDyJgGYDcdyv9W+MPmMu9X3RxGxzQAu+hS/jfnD5gGgIGU/4E2TAPA
        OMr/QBumAWAM5X+gnQ7vDjANwNkp/wPt5CCQ6mYxMv8+AmeW73j13R8Z5X/gd/54pLpZjI6DSTirLgdv
        Kf8Dn+kwDfDPI3BG+W5X3/mRUf4HSqYB4DEy6lb+B9rqMg3gJsXZdNhqmyj/A8/qMA2gTMnZdDhsS7sC
        XtRhGiAxUuEs8l2uvuOjo7IGvKjLQSVuVpyFh2pgGb8eqW4gI/PTETiDfJer7/jIKP8Db9LhtLIkixJh
        ZRbWAkvpMg3gaGBW1+VhWvkfeLMO0wDeEMjqOrz5T/kfeJcuIxdHA7OqLkf/Kv8D79JlGsDRwKyqw9G/
        ifI/8G4dpgFyfKobGKvpsvffAzTwIV32Lythspp8Z6vv8uiYQgM+pMsWJmcCsJoOe///cwTgwzq8GyBx
        JgCr6PLgrPwP3KTLNIAzAVhFlx00WcgL8GFdRjNZDAgr6PDe/yzgBbhZl2kAC5rorsvefxUz4C66TAM4
        0YzuOrz3P7FmBriLLnuaEzc2uuoyXZaKHcDddBnZfHsEOsp3s/rOjk4qdgB30+VgEy8IoqsOL/5JnJwJ
        3FWnaQCLAemmy+I/62SAh+jychM3ObrpMkXm4Rh4iC6jnMRiQLrosvjP0b/AQ+UmU918RsdiQLrosvjP
        0b/AQ3U55tRiQLrosvjP0b/AQ+UmU918ZsRrgpmty+4Ye/+BIXLOeHUTGp0fj8BM+Q5W383RsfcfGKLL
        0cCJxYDM0mXxX2LvPzBEpxufhU/M0mVbrDYADNVl33NevWr0w2j5znV47W9i7z8wVJfFT4nFgIzWZRrM
        e/+BKbqcCWBLIKN12frnPAxgii5nAiTKoIziRExge50WA9oSyChdtv55JwYw1b+OVDenGXESGo/W6SAs
        VS9gqk6LAW2H4tG6bP2z+A+YLtuhuiwGTMyJ8iidprws/gNa6LQYMD8LPEKn77kHXaCFTiMjBwPxCJ0O
        /jHVBbTSaTGg8ij31uWd/8kXRwDa6LQYUBWAe+o0+rf4D2ipy2uCE1UA7qXT6N+x10BLnW6UjgfmXrqM
        /rPbRmULaCk3p+rGNStGS9yq09SWHS5Aa10OSklUAbhVl5f+JLb+Aa11Oio1UQXgozqN/p37Dyyh05ZA
        VQA+qtPo39Y/YAmdRk7J10fgPTotaLX1D1hKpy2BzgXgPTrt+09MYwFLyai7upnNinMBeKtOo39b/4Dl
        5KbV6S2BqgC8RbfRvwdXYEmdRlKJmymv6fadtfUPWFKntwRe4obKc7p9X731D1hap4OBEjdVntPtu5oz
        NQCW1e1goMSeap7Kd6L6rsxKztIAWF6ng4GSH4/AtXwnqu/KrHx5BGB53UZXib3VXHQ7uMrBP8CpdKsC
        5JhX2wLJd6DTkb+Jh1PgVDpWAWwLJK/Yrb4bs2L0D5xStypAYqX1vjouUDX6B06p21xr8tMR9pTPvvpO
        zIpjf4FT6/SSoEtMBeyn24l/ie8hcGod1wIkpgL20bH0b/QPbKHjWoC8AMZDwPnlM+70sp9LjP6BLXSt
        AngIOLeunb/RP7CVjlWAxEPAOXXt/BOjf2ArXasAiYeAc+nc+Rv9A1v64Uh1U+wQDwHn0LnzT74+ArCd
        vH89I6DqxtghHgLW1r3zd+ofsLWO+7Gvkw7E6Wzr6Xjo1NNkGgxgW5n/7Hg40NP87Qhr+OZI9Rl2ShbB
        AmxvhdFa8v0RC7b6ymeTz6j67LrF1BLAJ123BT5Nzo938+4nn0m3s/2fS95ACMAn3RcEXse6gF7yWXRe
        7Hcd2/4ACtkSVd00u+bvR5grn0H12XTNl0cAKPx8pLpxdk3KzqleMFau+Sol/0ty7gUAz8hcbnXz7J6s
        PGeMFVb5P01K/x4UAV6x2lTAJb8csbf7cXJtc42ra9891owAvNEquwKqfHfEQq/7ybXMNa2u9QpR+gd4
        h9z0V9kVUCWr0i34ul2u4Sor/KvkkCsPgwDv1PmNgW/Nj0dMC7xfrlmuXXVNV4ozIwA+aNX1AE/jQeBt
        ztLxJ970B3Cjfx6pbrArxoNA7asjZ+n4k3xnAbiDlRcFVslq9nR6u8s1WHVl/3Ox6A/gjrKQarVDgt6S
        LHDLaXY7zRXnd83vvPLivueS76hFfwB3tvrOgNeSk+3y2uEzdiD5nfK7rXZ633vinH+AB8ro8cwPAZfk
        tbZ/ObJyh5KfPb/DKq/ovSX5TlrxD/BguzwEXJJRc46//fOR7vIz5mc980j/aXT+AAPt9hBwnayWTzm9
        wwPBpcM/0wr+90TnDzDBzg8B18kq+nTAWVh3eTC454tn8mflz8yfnb8jf9fZVu5/JDp/gIkyz3zG3QH3
        Slbap8O+Ts7Vz6j9Ovnfnv5zZ1ylf69Y7Q/QgIcAGRmdP0AjuSHnAJbqhi1yr+Q7pvMHaOhMxwZLrzje
        F6C5b49UN3CRjybfKQAWkPfI2yEgtybfoXyXAFhItmhZHCgfTb47tvkBLCoLts72JkF5fPKdsdgP4ASs
        C5C3xnw/wMl8ceTXI9VNXyTfDSV/gJNyXoBUsb8fYBNfH7FLQPIdyHcBgI3kJTcWCO6bfPb3fGkSAItR
        DdgrRv0A/B9rA/aIuX4ASnYKnDP5TPPZAsCLshfctMD6Ue4H4N1SKvZ2wXWTz065H4APy0pxDwLrJJ+V
        1f0A3E1OibNtsG9s6wPgobKYzI6BPslnYYEfAMOYGpgbpX4ApspCM7sGxiTXONfa4j4AWvnrEesE7p9c
        01xbAGgtpel/HHGo0MeTa5fRvjI/AEv68kjmq00RvJ5co1yrXDMAOA0PA59Hpw/AVnKuQErcO64ZyO+c
        3z3XAAC2lVXtGQFn3cDPR6pOc+Xkd8rvlt/RCn4AeEEOt8koOQfdrLSYMD9rfub87A7oAYA7SIeat9tl
        NJ0y+sxqQf7u/Az5WbJFT2cPAIOlrJ4O+FI1uCQj8XTST3O9CDH/ufpnLqP4Sy5/vhI+AAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDJ
        H/7wP8qIZ+kPcb3TAAAAAElFTkSuQmCC
</value>
  </data>
</root>